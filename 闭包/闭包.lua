---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangpengyong.
--- DateTime: 2022/4/11 10:27
---

do
    -- 将 a.p 指向 print 函数
    a = { p = print }
    -- 使用 a.p 函数
    a.p("jiangpengyong")
    -- 将 print 指向 math.sin，但不会影响原有的 a.p
    print = math.sin
    a.p(print(1))
    -- 将 math.sin 指向 a.p
    local sin = math.sin
    math.sin = a.p
    math.sin(10, 20)

    math.sin = sin
    print = a.p
end

do
    foo = function(x)
        return x * x
    end

    print(foo(2))
end

do
    t = {
        { name = "xiao peng you", age = 20 },
        { name = "zinc", age = 27 },
        { name = "jiang peng yong", age = 28 },
    }
    table.sort(t, function(a, b)
        return #a.name > #b.name
    end)
    for i, v in ipairs(t) do
        print(i, "-->", v.name, "--", v.age)
    end
end

do
    -- 导数
    function derivative(f, delta)
        delta = delta or 1e-4
        return function(x)
            return (f(x + delta) - f(x)) / delta
        end
    end
    c = derivative(math.sin)
    print(math.cos(5.2), c(5.2))
end

do
    -- 定义 table 函数，三种方式
    -- 第一种
    Lib1 = {}
    Lib1.add = function(a, b)
        return a + b
    end
    Lib1.reduce = function(a, b)
        return a - b
    end
    print("Lib1", Lib1.add(10, 2), Lib1.reduce(2, 3))

    -- 第二种
    Lib2 = {
        add = function(a, b)
            return a + b;
        end,
        reduce = function(a, b)
            return a - b;
        end
    }
    print("Lib2", Lib2.add(10, 2), Lib2.reduce(2, 3))

    -- 第三种
    Lib3 = {}
    function Lib3.add(a, b)
        return a + b
    end
    function Lib3.reduce(a, b)
        return a - b
    end
    print("Lib3", Lib3.add(10, 2), Lib3.reduce(2, 3))
end

do
    -- 局部函数，几种方式
    local function fact1(n)
        if n == 0 then
            return 1
        end
        return n * fact1(n - 1)
    end
    print(fact1(10))

    -- 局部函数
    -- 这样使用会有问题
    --local fact2 = function(n)
    --    if n == 0 then
    --        return 1
    --    end
    --    -- 因为 Lua 语言编译函数体中的 fact2(n-1) 调用时，局部的 fact2 尚未定义。
    --    return n * fact2(n - 1)
    --end
    --print(fact2(10))

    -- 最开始的写法其实 Lua 会帮忙编译为以下
    local fact3
    fact3 = function(n)
        if n == 0 then
            return 1
        end
        return n * fact3(n - 1)
    end
    print(fact3(10))

end