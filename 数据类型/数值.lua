---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangpengyong.
--- DateTime: 2022/4/4 3:00 PM
---

-- integer 和 float
print("\n")
print(math.type(3))
print(math.type(3.0))
print(type(3))
print(type(3.0))

-- 十六进制浮点数
print("\n")
print(0x0.2)
print(0x1p-1)
--print(0xa.bp2)

-- 十六进制浮点数输出
print("\n")
print(string.format("%a", 419))
print(string.format("%a", 0.1))

-- 数值除法
print("\n")
print(3 / 2)
print(3.0 / 2.0)

-- float 除法 运算符
print("\n")
print(3 // 2)
print(3.0 // 2)
print(6 // 2)
print(6.0 // 2.0)
print(-9 // 2)
print(1.5 // 0.5)

-- 取模
print("\n")
print(3 % 2)
print(3.0 % 2)
print(-15 % 2)
print(3.1415926 % 0.01)

-- 最大值
print("\n")
print("math.huge", math.huge)
maxInteger = (2 ^ 63 - 1)
print("2^63", maxInteger, math.type(maxInteger), "math.maxinteger", math.maxinteger, maxInteger == math.maxinteger)
print("math.minteger", math.mininteger)

-- 三角函数
print("\n")
print(math.deg(6.2831853071796))
print(math.rad(360))

-- 随机数
print("\n")
--math.randomseed(os.time())
for i = 1, 10 do
    print(math.random(5))
end

print("\n")
x = 2 ^ 52 + 1
print(string.format("大数字：%f", x))
print(string.format("大数字+0.5 floor ：%f", math.floor(x + 0.5)))
-- 处理 大数字 四舍五入
function round(x)
    local f = math.floor(x)
    if x == f then
        return f
    else
        return math.floor(x + 0.5)
    end
end
print("大数字 round: ", round(x))

-- 无偏取整，取最近的偶数
function round1(x)
    local f = math.floor(x)
    if (x == f) or (x % 2.0 == 0.5) then
        return f
    else
        return math.floor(x + 0.5)
    end
end
print("无偏取整: ", round1(2.5))

-- 整型转浮点数
print("\n")
int1 = 3
print(int1, "type", math.type(int1))
fl1 = int1 + 0.0
print(fl1, "type", math.type(fl1))
bigInt = 2 ^ 60
bigIntToFloat = bigInt + 0.0
print(bigInt, " 转为 float:", bigIntToFloat, "是否相同：", (bigInt == bigIntToFloat))

-- 浮点数转整型
print("\n")
fl2 = 3.0
print(fl2, "type", math.type(fl2))
int2 = fl2 | 0
print(int2, "type", math.type(int2))
-- 有小数会爆出 number has no integer representation
--print("有小数：", (3.2 | 0))
-- 超出范围爆出 number has no integer representation
--print("超出范围：", (2 ^ 64 | 0))
-- 数值没有用整型 bad argument #2 to 'random' (number has no integer representation)
--print(math.random(1, 3.5))
print(math.tointeger(-258.0))
print(math.tointeger(2 ^ 32))
print(math.tointeger(258.01))
print(math.tointeger(2 ^ 64))