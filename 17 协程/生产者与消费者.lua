---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangpengyong.
--- DateTime: 2022/4/23 12:09
---

function produce()
    local x = 1;
    while true do
        x = x + 1;
        send(x)
    end
end

function consume()
    local y = 1
    while y <= 100 do
        local x = receive()
        print(x)
        y = y + 1
    end
end

function receive()
    -- 每次调用 resume 就会驱动一次协程，直到内部的运行到 yield ，然后返回 yield 的参数
    -- 或是运行到协程结束，返回最后的 return 值
    local status, value = coroutine.resume(producer)
    return value
end

function send(x)
    coroutine.yield(x)
end

producer = coroutine.create(produce)
consume()