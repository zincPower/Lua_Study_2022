---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangpengyong.
--- DateTime: 2022/4/20 8:41 PM
---

print("==============================================")
print("普通表：")
do
    local a = {}
    local k1 = {}
    a[k1] = 10
    local k2 = {}
    a[k2] = 20

    print("移除引用前：")
    for i, v in pairs(a) do
        print(i, v)
    end

    print("移除引用后：")
    k1 = nil
    k2 = nil
    -- 垃圾回收
    collectgarbage()
    for i, v in pairs(a) do
        print(i, v)
    end
end

print("===============================================")
print("弱引用表的使用：")
do
    local a = {}
    -- 创建一个 key 为弱引用的表
    local mt = { __mode = "k" }
    setmetatable(a, mt)
    local k1 = {}
    a[k1] = 10
    local k2 = {}
    a[k2] = 20

    print("移除引用前：")
    for i, v in pairs(a) do
        print(i, v)
    end

    print("移除引用后：")
    -- 删除值
    k1 = nil
    -- 垃圾回收
    collectgarbage()
    for i, v in pairs(a) do
        print(i, v)
    end
end

print("===============================================")
print("值引用的弱引用表：")
do
    local a = {}
    -- 创建一个 key 为弱引用的表
    local mt = { __mode = "k" }
    setmetatable(a, mt)

    a["name"] = "jiang"
    a[11] = "11"
    a[true] = "true"
    a[{}] = "table"
    print("触发垃圾回收前：")
    for i, v in pairs(a) do
        print(i, v)
    end

    -- 即使是弱引用表数值、布尔值、字符串并不会被回收
    collectgarbage()
    print("触发垃圾回收后：")
    for i, v in pairs(a) do
        print(i, v)
    end
end

print("===============================================")
print("瞬表——方法中引用了弱引用的值：")
do
    local mem = {}
    setmetatable(mem, { __mode = "k" })
    function factory(o)
        local res = mem[o]
        if not res then
            res = (function()
                return o
            end)
            mem[o] = res
        end
        return res
    end

    print("触发垃圾回收前：")
    info = {}
    f = factory(info)
    for i, v in pairs(mem) do
        print(i, v)
    end

    info = nil
    f = nil
    -- 垃圾回收
    collectgarbage()
    print("触发垃圾回收后：")
    for i, v in pairs(mem) do
        print(i, v)
    end
end

print("===============================================")
print("瞬表——表中引用了弱引用的值：")
do
    local mem = {}
    setmetatable(mem, { __mode = "k" })
    function factory(o)
        local res = mem[o]
        if not res then
            res = {
                name = "jiang",
                obj = o,
            }
            mem[o] = res
        end
        return res
    end

    print("触发垃圾回收前：")
    info = {}
    f = factory(info)
    for i, v in pairs(mem) do
        print(i, v)
    end

    info = nil
    f = nil
    -- 垃圾回收
    collectgarbage()
    print("触发垃圾回收后：")
    for i, v in pairs(mem) do
        print(i, v)
    end
end