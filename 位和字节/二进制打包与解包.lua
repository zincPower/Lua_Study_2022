---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangpengyong.
--- DateTime: 2022/4/14 18:17
---

do
    -- b char
    -- h short
    -- i int(可以跟一个数字，表示多少字节的整型数)
    -- l long
    -- j Lua 语言中的整型数大小
    local format = "iii"
    local s = string.pack(format, 3, -27, 450)
    print(s, #s)
    print(string.unpack(format, s))
end

do
    local s = "hello\0Lua\0world\0"
    local i = 0
    while i <= #s do
        local res
        res, i = string.unpack("z", s, i)
        print(res)
    end
end

do
    local n1 = 1 << 54
    print(n1)
    local x1 = string.pack("i7", n1)
    print(string.unpack("i7", x1))
end

do
    -- 打包和解包都会进行检查
    print("")
    local n2 = -(1 << 54)
    print(n2)
    local x2 = string.pack("i7", n2)
    print(string.unpack("i7", x2))
    -- 打包会进行检查是否溢出
    -- lua:38: bad argument #2 to 'pack' (integer overflow)
    --print(string.pack("i7", 1 << 55))

    local x = string.pack("i12", 2 ^ 61)
    string.unpack("i12", x)
    x = "aaaa" .. "aaaa" .. "aaaa"
    -- 解包也会检查是否能装得下，lua:48: 12-byte integer does not fit into Lua Integer
    --string.unpack("i12", x)
end

do
    -- 无符号
    local s = "\xFF"
    print(string.unpack("b", s))
    print(string.unpack("B", s))
end

do
    print("")
    print("----- sn -----")
    local s1 = string.pack("s", "hello")
    for i = 1, #s1 do
        print(string.unpack("B", s1, i))
    end

    print("")
    print("----- s -----")
    local s2 = string.pack("s", "hello")
    print(string.unpack("s", s2, i))

    print("----- cn -----")
    local s3 = string.pack("c5", "hello")
    for i = 1, #s3 do
        print(string.unpack("B", s3, i))
    end
    print(string.unpack("c5", s3))
end

do
    -- 二进制对齐模式
    print("")
    -- 大端模式
    print("大端模式")
    local s1 = string.pack(">i4", 1000000)
    for i = 1, #s1 do
        print(string.unpack("B", s1, i))
    end
    print("小端模式")
    local s2 = string.pack("<i2 i2", 500, 24)
    for i = 1, #s2 do
        print(string.unpack("B", s2, i))
    end
end