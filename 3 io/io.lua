---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangpengyong.
--- DateTime: 2022/4/8 22:32
---

local rootPath = debug.getinfo(1, "S").source:sub(2):match("(.*/)")

print("-----------------")
print("io.write: ")
io.output(rootPath .. "jiangpengyong.txt")
-- 这样性能好，避免不必要的连接动作
io.write("jiang", "peng", "yong", "\n")
-- 这样性能差些
io.write("jiang" .. "peng" .. "yong" .. "\n")

print("-----------------")
print("格式输出: ")
io.write("sin(3) = ", math.sin(3), "\n")
-- 如果需要格式化，则需要调用 string.format
io.write(string.format("sin(3) = %.4f", math.sin(3)), "\n")

print("-----------------")
print("输入: ")
io.input(rootPath .. "一件小事.txt")
print("io.read(\"l\"): ")
print(io.read("l"))
print("io.read(\"a\"): ")
article = io.read("a")
print(article)

print("-----------------")
print("用 n 读取非数字内容：")
io.input(rootPath .. "numberAndString.txt")
print("number: ", io.read("n"), io.read("n"), io.read(1))

print("-----------------")
print("文本替换: ")
change = string.gsub(article, "我", "*")
print(change)

print("-----------------")
print("MIME 可打印字符引用编码: ")
io.input(rootPath .. "一件小事.txt")
article = io.read("all")
print(article)
print("")
-- 将所有非 ASCII 字符串替换为编码 =xx
print(string.gsub(article, "([\128-\255=])", function(c)
    return string.format("=%02X", string.byte(c))
end))

print("-----------------")
print("已经到输入流末尾，进行读取: ")
print("io.read(\"a\"): ", io.read("a"))
print("io.read(\"l\"): ", io.read("l"))
print("io.read(\"L\"): ", io.read("L"))
print("io.read(\"n\"): ", io.read("n"))
print("io.read(9): ", io.read(9))

print("-----------------")
print("遍历输入流: ")
-- 通过 io.read("L") 进行读取遍历
io.input(rootPath .. "一件小事.txt")
io.output(rootPath .. "一件小事-copyByReadLine")
for count = 1, math.huge do
    local line = io.read("L")
    if line == nil then
        break
    end
    io.write(string.format("%6d  ", count), line)
end
print("使用 io.lines 读取当前流，不会自动关闭")
-- 通过 io.lines() 进行读取遍历
-- do end 只是限定一个作用域
io.input(rootPath .. "一件小事.txt")
io.output(rootPath .. "一件小事-copyByLines.txt")
do
    local count = 0
    for line in io.lines() do
        count = count + 1
        io.write(string.format("%6d  ", count), line, "\n")
    end
end
print("使用 io.lines 读取指定文件，会自动关闭")
io.output(rootPath .. "numberAndString-copyByLinesFilename.txt")
do
    local count = 0
    for line in io.lines(rootPath .. "number.txt") do
        count = count + 1
        io.write(string.format("%6d  ", count), line, "\n")
    end
end
print("io.lines(filename, num)")
io.output(rootPath .. "numberAndString-copyByLinesBlock.txt")
do
    local count = 0
    for line in io.lines(rootPath .. "number.txt", 2) do
        count = count + 1
        io.write(line)
    end
end
print("io.lines(filename, n)")
io.output(rootPath .. "numberAndString-copyByLinesNumber.txt")
do
    local count = 0
    for line in io.lines(rootPath .. "number.txt", "n") do
        count = count + 1
        io.write(line)
    end
end

print("-----------------")
print("排序文件：")
do
    io.input(rootPath .. "一件小事.txt")
    io.output(rootPath .. "一件小事-copyForSort")
    local lines = {}
    local count = 0
    for line in io.lines() do
        count = count + 1
        -- 因为 table 是从 1 开始的
        lines[#lines + 1] = line
    end
    table.sort(lines)
    for _, v in ipairs(lines) do
        io.write(v, "\n")
    end
end

print("-----------------")
print("使用 io.read(num) 进行拷贝：")
do
    io.input(rootPath .. "一件小事.txt")
    io.output(rootPath .. "一件小事-copyByReadNum")
    while true do
        local block = io.read(2 ^ 13) -- 8k
        if block == nil then
            break
        end
        io.write(block)
    end
end

print("-----------------")
print("使用 io.read(0) 判断结尾：")
do
    io.input(rootPath .. "一件小事.txt")
    print(io.read(0))
    --- 将整个文章读取，文件位置就到了末尾
    io.read("a")
    print(io.read(0))
end

print("-----------------")
print("多值读取：")
do
    io.input(rootPath .. "number.txt")
    while true do
        n1, n2, n3 = io.read("n", "n", "n")
        if n1 == nil then
            break
        end
        print(n1, n2, n3)
    end
end

print("-----------------")
print("io.open：")
print("打开不存在文件：")
do
    print(io.open("notExistFile.txt", "r"))
    --local file = assert(io.open("notExistFile.txt", "r"))
end
print("打开存在文件：")
do
    local file = io.open(rootPath .. "一件小事.txt", "r")
    -- 需要使用 冒号
    local t = file:read("a")
    file:close()
    print(t)
end

print("-----------------")
print("预设的三个流句柄：")
do
    --readNum = io.stdin:read("n")
    --print("num", readNum)
    --io.stdout:write("jiang", "peng", "yong!!!", "\n")
    --io.stderr:write("error message.")
end

print("-----------------")
print("切换输入、输出流：")
do
    io.input(rootPath .. "一件小事.txt", "r")
    -- 获取当前流局柄
    article1 = io.input()
    -- 重新打开一个文件，读取内容，关闭
    io.input(rootPath .. "names.txt", "r")
    print(io.read("l"))
    io.input():close()
    -- 切换为 article1
    io.input(article1)
    print(io.read("l"))
    -- 关闭 article1
    io.input():close()
end

print("-----------------")
print("io.tmpfile ：")
tmpFile = io.tmpfile()
tmpFile:write("jiangpengyong")

print("-----------------")
print("将缓存写入文件 flush ：")
io.flush()
io.output():flush()

print("-----------------")
print("设置文件：")
file = io.open(rootPath .. "outputBuf.txt", "w")
-- 设置缓存模式
file:setvbuf("no")
file:close()

print("-----------------")
print("seek ：")
do
    file = io.open(rootPath .. "一件小事.txt", "r")
    file:read("l")
    print("file:seek(): " .. file:seek())
    print("file:seek(\"set\"): " .. file:seek("set"))
    print("file:seek(\"end\"): " .. file:seek("end"))
    print(file:read("l"))
end

print("-----------------")
print("rename 重命名：")
do
    -- 创建文件
    local file = io.open(rootPath .. "original.txt", "w")
    file:write("江澎涌")
    file:close()
    -- 重命名
    print(os.rename(rootPath .. "original.txt", rootPath .. "rename.txt"))
end

print("-----------------")
print("delete 删除：")
do
    local file = io.open(rootPath .. "delete.txt", "w")
    file:write("江澎涌")
    file:close()
    print(os.remove(rootPath .. "delete.txt"))
end

print("-----------------")
print("系统调用：")
do
    -- 终止程序
    --os.exit(1, true)
    -- 获取环境变量，如果没有返回 nil
    print(os.getenv("HOME"))
    print(os.getenv("JIANGPENGYONG"))
    -- 执行系统
    --print(os.execute("mkdir " .. rootPath .. "createByExecute"))
    --print(os.execute("touch " .. rootPath .. "createByExecute/jiangpengyong.txt"))
end

print("-----------------")
print("io.popen：")
do
    local f = io.popen("ls " .. rootPath, "r")
    local dir = {}
    for entry in f:lines() do
        dir[#dir + 1] = entry
    end
    for i, v in ipairs(dir) do
        print(i, "-->", v)
    end
end

--do
--    local subject = "test project"
--    local address = "jpynihao@gmail.com"
--    local cmd = string.format('mail -s "%s" %s', subject, address)
--    print(cmd)
--    local file = io.popen(cmd, "w")
--    file:write("Test content.--- jiangpengyong")
--    file:close()
--end

print("-----------------")
print("io.type：")
local file = io.open(rootPath .. "一件小事.txt", "r")
print(io.type(file))
file:close()
print(io.type(file))
print(io.type("jiangpengyong"))