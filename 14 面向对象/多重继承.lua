---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangpengyong.
--- DateTime: 2022/11/16 09:55
---

local function search(k, plist)
    for i = 1, #plist do
        local v = plist[i][k]
        if v then
            return v
        end
    end
end

function createClass(...)
    local c = {}
    local parents = { ... }

    --setmetatable(c, { __index = function(t, k)
    --    local v = search(k, parents)
    --    -- 这里可以保存下来，只是后续修改方法的定义就会比较困难，因为不会再走元表链
    --    t[k] = v
    --    return v
    --end })
    --c.__index = c

    c.__index = function(t, k)
        local v = search(k, parents)
        -- 这里可以保存下来，只是后续修改方法的定义就会比较困难，因为不会再走元表链
        t[k] = v
        return v
    end

    function c:new(o)
        o = o or {}
        setmetatable(o, c)
        return o
    end

    return c
end

local Named = {}
function Named:getname()
    return self.name
end
function Named:setname(n)
    self.name = n
end

local Account = { balance = 0 }
function Account:new(o)
    print(self, "Account new")
    o = o or {}
    -- 将自己设置为 __index 的元方法
    self.__index = self
    -- 将自己设置为 o 的元表，这样就会调用 self 的 __index 方法或表，这里就是 self 自身表
    setmetatable(o, self)
    return o
end
-- 使用 : 就相当于 function Account.withdraw(self, v)
function Account:withdraw(v)
    print(self, "Account withdraw")
    if v > self.balance then
        error "insufficient funds"
    end
    self.balance = self.balance - v
end
function Account:deposit(v)
    print(self, "Account deposit")
    self.balance = self.balance + v
end

local NamedAccount = createClass(Named, Account)
local account = NamedAccount:new { name = "jiang", balance = 10000 }
print(account:getname())
account:setname("jiang peng yong")
print(account:getname())
account:withdraw(100)
print(account.balance)