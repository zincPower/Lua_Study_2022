---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiangpengyong.
--- DateTime: 2022/11/13 16:09
---

local Set = {}
local metatable = {}

function Set.new(l)
    local set = {}

    -- 设置所有的集合共用一个元表
    setmetatable(set, metatable)

    for _, v in pairs(l) do
        set[v] = true
    end
    return set
end

-- 并集
function Set.union(a, b)
    local res = Set.new {}
    -- 检测元表是否是同一个
    --if getmetatable(a) ~= metatable or getmetatable(b) ~= metatable then
    --    error("attempt to 'add' a set with a non-set value", 2)
    --end
    for k in pairs(a) do
        res[k] = true
    end
    for k in pairs(b) do
        res[k] = true
    end
    return res
end

-- 交集
function Set.intersection(a, b)
    local res = Set.new {}
    for k in pairs(a) do
        res[k] = b[k]
    end
    return res
end

function Set.tostring(set)
    local l = {}
    for e in pairs(set) do
        l[#l + 1] = tostring(e)
    end

    return "{" .. table.concat(l, ", ") .. "}"
end

local __metatable = "not your business"
-- 保护元表
metatable.__metatable = __metatable

-- 要放在 union 方法之后，否则 Lua 会在赋值的时候找不到 Set.union
metatable.__add = Set.union
metatable.__mul = Set.intersection
-- 子集
metatable.__le = function(a, b)
    for k in pairs(a) do
        if not b[k] then
            return false
        end
    end
    return true
end

-- 真子集
metatable.__lt = function(a, b)
    return a <= b and not (b <= a)
end

-- 相等
metatable.__eq = function(a, b)
    print("equal ope")
    return a <= b and b <= a
end

metatable.__tostring = Set.tostring

return Set